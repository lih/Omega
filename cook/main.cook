set silent;

search_list = cook;
parallel_jobs = 4;

HOOKS = hooks;
BUILD = .build;
BIN = [BUILD]/bin;
SRC = src;
EXEC = exec;

setenv SRC = [SRC];
setenv BUILD = [BUILD];

#include [resolve hooks.cook]

sources = [SRC]/kmain.s [collect ls [SRC]/'*'.s [SRC]/'*'.c];
headers = [collect ls [SRC]/'*'.h];

all: [EXEC]/Omega.img {}
clean: {
       rm -rf [BUILD];
}

[BUILD]/constants.S: [HOOKS]/ASMConstants [SRC]/constants.h 
{ function hook; }
[BUILD]/ld.conf: [HOOKS]/LDConf [SRC]/constants.h
{ function hook; }

[BIN]/%0%.s.o: [HOOKS]/ASM [SRC]/%0%.s [BUILD]/constants.S(weak)
{ function rawhook; }
[BIN]/%0%.c.o: [HOOKS]/CC [SRC]/%0%.c [headers] 
{ function rawhook; }

[BIN]/kernel.bin: [HOOKS]/LD [BUILD]/ld.conf(weak) [fromto [SRC]/%0% [BIN]/%0%.o(weak) [sources]]
{ function rawhook; }
[BIN]/bootsector.bin: [HOOKS]/BootSect [SRC]/bootsector.S [BUILD]/constants.S(weak)
{ function rawhook; }

[EXEC]/Omega.img: [HOOKS]/Disk [BIN]/bootsector.bin(weak) [BIN]/kernel.bin(weak) 
{ function rawhook; }
